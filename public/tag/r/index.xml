<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>r | Daniel Braby</title>
    <link>https://danielbraby.com/tag/r/</link>
      <atom:link href="https://danielbraby.com/tag/r/index.xml" rel="self" type="application/rss+xml" />
    <description>r</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-gb</language><copyright>© Daniel Braby 2020</copyright><lastBuildDate>Sun, 27 Dec 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://danielbraby.com/images/icon_hud43cc38e8821a474da0bb232c3514873_35609_512x512_fill_lanczos_center_2.png</url>
      <title>r</title>
      <link>https://danielbraby.com/tag/r/</link>
    </image>
    
    <item>
      <title>Constituency Focus In Parliamentary Speech Automated Content Analysis in R</title>
      <link>https://danielbraby.com/post/constituency-focus-in-parliamentary-speech-automated-content-analysis-in-r/</link>
      <pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://danielbraby.com/post/constituency-focus-in-parliamentary-speech-automated-content-analysis-in-r/</guid>
      <description>
&lt;script src=&#34;https://danielbraby.com/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I haven’t posted a blog in a little while, so I thought I’d do a little something related to my recent projects which have looked at constituency-focus in legislative speech.&lt;/p&gt;
&lt;p&gt;Here I will give a brief overview of handling legislative speech data and using a dictionary based approach to conduct automated content analysis using pattern matching.&lt;/p&gt;
&lt;p&gt;Doing this we will answer one simple question: are newly elected MPs more constituency-focused than re-elected MPs? In recent years there has been growing voter volatility and across the years studied here, notably fewer MPs seeking re-election than is typical. Thus, a greater proportion of newly elected MPs in Parliaments. This gives us a pretty reasonable sample for comparing across categories.&lt;/p&gt;
&lt;p&gt;There are a number of reasons we might expect newly elected MPs to be more constituency-focused in their Parliamentary work (without getting into the literature too much).&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Newly elected MPs are more than often the result of an inter-party transition at the constituency-level and thus are more likely to be in a marginal seat.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Newly elected MPs need to develop their own personal appeal, distinct from the party for seeking re-election, and develop a personal reputation among their constituents by being more active.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MPs are socialized into their role and develop a style which is somewhat fixed within their first Parliament. In recent years, the demand for constituency-focus in Parliamentary work is simply higher.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On the contrary there are reasons we would expect longer serving MPs to ask less constituency-focused questions, such as greater electoral security, gained competency in specific policies and party seniority (may change MPs’ focus to broader Gov v Opp debate).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div id=&#34;required-packages&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Required Packages&lt;/h4&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;require(data.table)
require(tidyverse)
require(jsonlite)
require(lubridate)
require(mnis)
require(tm)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;lets-get-some-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Let’s get some data&lt;/h2&gt;
&lt;p&gt;In the past I’ve used the Hansard API or performed web scraping directly from the Hansard website. Both of these options are particularly annoying, bothersome, ill-advised and incomplete. Thankfully, Evan Odell has made his data of Hansard Speeches 1979-2020 (v3.0.1) available on &lt;a href=&#34;https://zenodo.org/record/4066772&#34;&gt;Zenodo&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hansard &amp;lt;- fread(&amp;quot;https://zenodo.org/record/4066772/files/hansard-speeches-v301.csv?download=1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The dataset includes over 2m contributions, covering many debates from the House of Commons across almost 40 years and 11 Parliaments. As the last two elections have been snap (called early) elections and we are interested in behaviour across the duration of each Parliament, we subset the data to give us 2005-2015. Thus, giving us two full Parliaments.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Word of advice: the further back you go with anything Hansard related the more detail you lose. 2005 onward is pretty comprehensive from what I gather.&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hansard$date &amp;lt;- as.Date(hansard$date)

election_2005 &amp;lt;- as.Date(&amp;quot;2005-05-04&amp;quot;)
election_2015 &amp;lt;- as.Date(&amp;quot;2015-05-07&amp;quot;)

speeches &amp;lt;- filter(hansard, date %within% interval(election_2005, election_2015))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To control for seniority and remove Ministers, Speakers of the House and senior Opposition figures, we load in 3 additional JSON files provided alongside the dataset on the Zenodo page linked above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;govPosts &amp;lt;- fromJSON(&amp;quot;https://zenodo.org/record/4066772/files/government_posts.json?download=1&amp;quot;)

oppPosts &amp;lt;- fromJSON(&amp;quot;https://zenodo.org/record/4066772/files/opposition_posts.json?download=1&amp;quot;)

parlPosts &amp;lt;- fromJSON(&amp;quot;https://zenodo.org/record/4066772/files/parliamentary_posts.json?download=1&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As several MPs across this time period have held multiple Ministerial and Parliamentary positions it was unsuitable to store as part of the main dataset. Thus, the JSON file does not contain intervals but rather an observation for each day the position was held by the relevant MP.&lt;/p&gt;
&lt;p&gt;As we are interested in simply removing cases that match, this does not create any issues (nested lists) for our data. Using dplyr’s anti_join function we can filter out rows which exist in our data and have a relevant match in y. This is done by matches of the session date with the mnis_id (a unique identifier from the Members’ Name Information Service, used by journalists, developers and researchers to identify MPs and consistently code them).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;speeches$mnis_id &amp;lt;- as.character(speeches$mnis_id)
speeches$date &amp;lt;- as.character(speeches$date)

speeches &amp;lt;- anti_join(speeches, govPosts, by = c(&amp;quot;mnis_id&amp;quot;, &amp;quot;date&amp;quot;))
speeches &amp;lt;- anti_join(speeches, oppPosts, by = c(&amp;quot;mnis_id&amp;quot;, &amp;quot;date&amp;quot;))
speeches &amp;lt;- anti_join(speeches, parlPosts, by = c(&amp;quot;mnis_id&amp;quot;, &amp;quot;date&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The MNIS API provides us with some data on MPs necessary for asking the question at hand, do newly elected MPs reference their constituents more in spoken contributions than other MPs? In R, we can call the MNIS API using the ‘mnis’ package and extract the start_date for each MP within our dataset.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mps &amp;lt;- mnis::mnis_mps_on_date(date1 = election_2005, date2 = election_2015)

## Create Tibble for variables needed
mps &amp;lt;- tibble(
  mnis_id = as.character(mps$member_id),
  start_date = mps$house_start_date,
  gender = mps$gender
)

## Merge into data

speeches &amp;lt;- merge(speeches, mps, by =  &amp;quot;mnis_id&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Identifying newly elected MPs is relatively simple, we first load in the dates of the 2005 and 2010 UK General Elections and code whether or not there is zero difference in days between the election and the start_date of the MP.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;election_2010 &amp;lt;- as.Date(&amp;quot;2010-05-05&amp;quot;)


speeches$start_date &amp;lt;- as.Date(speeches$start_date)
speeches$new_elect &amp;lt;- c()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in set(x, j = name, value = value): Column &amp;#39;new_elect&amp;#39; does not exist to
## remove&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;speeches$new_elect[difftime(election_2005, speeches$start_date, units = &amp;quot;days&amp;quot;) == 0] &amp;lt;- &amp;quot;New&amp;quot;
speeches$new_elect[difftime(election_2010, speeches$start_date, units = &amp;quot;days&amp;quot;) == 0] &amp;lt;- &amp;quot;New&amp;quot;
speeches$new_elect[is.na(speeches$new_elect)] &amp;lt;- &amp;quot;Returning&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;dictionary-based-content-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Dictionary Based Content Analysis&lt;/h2&gt;
&lt;p&gt;Dictionary-based methods of content analysis are one of the most basic forms of quantitative text analysis. In essence, we create or leverage string values from our data and run a programme to record whether these appear within our text.&lt;/p&gt;
&lt;p&gt;In our dataset, each row represents a single spoken contribution by an MP. There are three key terms we want to combine together to form our measure of constituency reference: 1) possessive reference to the “constituen*” (My…; Own…), 2) explicit naming of the constituency and 3) a decomposed version of the constituency name removing compass directions and other common terms (Have &lt;a href=&#34;https://twitter.com/lawrencemckay94&#34;&gt;Lawrence McKay&lt;/a&gt; and his &lt;a href=&#34;https://www.tandfonline.com/doi/full/10.1080/13572334.2020.1726635&#34;&gt;great paper on constituency-focus in the UK&lt;/a&gt; to thank for this apporach. .&lt;/p&gt;
&lt;p&gt;To avoid potential grammatical or odd-capitalization issues leading to missed positive cases, we standardise the text of the contribution to all lower case and remove punctuation using the “tm” (text-mining) package, and do the same for the constituency value&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;speeches$speech &amp;lt;- speeches$speech %&amp;gt;% tolower() %&amp;gt;% removePunctuation()
speeches$constituency &amp;lt;- speeches$constituency %&amp;gt;% tolower() %&amp;gt;%
  removePunctuation()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we create a dictionary of the constituency terms to search for and use the str_detect function in the ‘stringr’ package to identify whether the transcript of the contribution contains either term&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;con_dict &amp;lt;- &amp;quot;my constituen|own constituen&amp;quot;

#as.integer returns 0/1 in place of FALSE/TRUE
speeches$con_ref1 &amp;lt;- as.integer(str_detect(speeches$speech, con_dict))
# Returns 26k / 290k positive

speeches$con_ref2 &amp;lt;- as.integer(str_detect(speeches$speech, speeches$constituency))
# Returns 13k / 290k positive

## Need to run twice with spaces as to not remove within words i.e. southhampton and remove words at the end of the string

decompose  &amp;lt;- &amp;quot;north |east |west |south |city |mid |center |&amp;quot;
decompose2 &amp;lt;- &amp;quot; north| east| west| south| city| mid| center|&amp;quot;

speeches$alt_con &amp;lt;- gsub(decompose, &amp;quot;&amp;quot;, speeches$constituency)
speeches$alt_con &amp;lt;- gsub(decompose2, &amp;quot;&amp;quot;, speeches$alt_con)

speeches$con_ref3 &amp;lt;- as.integer(str_detect(speeches$speech, speeches$alt_con))
# Returns 19k /290k Positive


#Construct into single meaesure

speeches$con_ref &amp;lt;- c()
speeches$con_ref[speeches$con_ref1 + speeches$con_ref2 + speeches$con_ref3 &amp;gt;= 1] &amp;lt;- 1
speeches$con_ref[speeches$con_ref1 + speeches$con_ref2 + speeches$con_ref3 == 0] &amp;lt;- 0

table(speeches$con_ref) ##39k/290k positive&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;FALSE 
FALSE      0      1 
FALSE 251210  39041&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;aggregate-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Aggregate Data&lt;/h2&gt;
&lt;p&gt;Now that we have run our automated content analysis, we are interested in aggregating our data for each MP /Parliament (2005 &amp;amp; 2010).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#To record a count of 1 for each contribution corresponding to an MP we create a variable x, which equals 1

speeches$x &amp;lt;- 1

#To create a unique identifier for MP/year, we create an interval covering 2005-2010 and 2010-2015, and paste that into a new variable by our constituency

speeches$date &amp;lt;- as.Date(speeches$date)

parliament_2005_2010 &amp;lt;-interval(election_2005, election_2010)

parliament_2010_2015 &amp;lt;- interval(election_2010, election_2015)

## First create variable to record which parliament the session date falls into

speeches$parl &amp;lt;- c()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;FALSE Warning in set(x, j = name, value = value): Column &amp;#39;parl&amp;#39; does not exist to
FALSE remove&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;speeches$parl[speeches$date %within% parliament_2005_2010 == TRUE] &amp;lt;- 2005
speeches$parl[speeches$date %within% parliament_2010_2015 == TRUE] &amp;lt;- 2010



## Unique identifier == constituency  +  year

speeches$con_elect &amp;lt;- paste0(speeches$constituency, speeches$parl)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One issue with aggregating our data to reflect activity across the parliamentary tenure is the possibility of by-elections (elections when MPs resign or are removed from their post). This can be achieved by aggregating our data by the unique id we have generated and identifying cases with more than one MP display name within a single Parliament&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;## group_by and summarise from dplyr package

speeches_agg &amp;lt;- speeches %&amp;gt;% group_by(con_elect) %&amp;gt;% summarise(count = length(unique(display_as)))

#26 cases of &amp;gt;1 MP


#Merge in count of MPs
speeches &amp;lt;- merge(speeches, speeches_agg, by = &amp;quot;con_elect&amp;quot;)

#Remove &amp;gt;1 cases
speeches &amp;lt;- filter(speeches, count == 1)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And aggregate again using the same method&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- speeches %&amp;gt;% group_by(con_elect) %&amp;gt;%
  summarise(count = sum(x),
            con_ref = sum(con_ref),
            new_elect = new_elect
            )

##Remove any potential duplicates

df &amp;lt;- unique (df)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;some-insights-and-visuals&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Some insights and visuals&lt;/h2&gt;
&lt;p&gt;There are a number of interesting features in the distribution of the number of MPs oral contributions, ranging from 1-2488. As we are interested in the percentage of constituency-references in MPs contributions, comparing %’s from a low number of contributions on a punctuated scale may skew our results.&lt;/p&gt;
&lt;p&gt;As a quick solution for generating some blog-worthy content, we remove cases with less than 50 contributions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df &amp;lt;- filter(df, count &amp;gt;= 50 &amp;amp; count &amp;lt;= 2000)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Calculate percentage of constituency references in spoken contributions, and present as histogram.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df$con_perc &amp;lt;- round((df$con_ref / df$count*100), digits = 2)
hist(df$con_perc, main = &amp;quot;Histogram of % of contributions in HoC featuring Constituency Reference&amp;quot;, xlab = &amp;quot;%&amp;quot; , col = &amp;quot;darkmagenta&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://danielbraby.com/post/2020-12-27-constituency-focus-in-parliamentary-speech-automated-content-analysis-in-r/index.en_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Here we see that the majority of MPs (excluding more senior Government and Opposition figures) reference their constituency between 5-20% across their parliamentary contributions. Let us now plot the percentage of constituency references by the overall count of contributions and use ggplot to colour code newly elected and returning MPs.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;p &amp;lt;- ggplot(df, aes(count, con_perc, colour = new_elect)) + geom_point()
p + labs(x =&amp;quot;Number of Contributions&amp;quot;,  y=&amp;quot;Percentage feat. Constituency Reference&amp;quot;, 
  colour = &amp;quot;New MP / Returning MP&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://danielbraby.com/post/2020-12-27-constituency-focus-in-parliamentary-speech-automated-content-analysis-in-r/index.en_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Gleaning from the plot, 3 trends are observed:1) as MPs contribute more within a Parliament, the proportion of their contributions referencing constituents declines; 2) on average newly elected MPs seemingly contribute more compared to returning MPs and 3) do indeed reference their constituents more.&lt;/p&gt;
&lt;p&gt;We conduct a simple unpaired t-test in R to compare group-differences between new and returning MPs.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df$new_elect[df$new_elect == &amp;quot;New&amp;quot;] &amp;lt;- 1
df$new_elect[df$new_elect == &amp;quot;Returning&amp;quot;] &amp;lt;- 0

df$new_elect &amp;lt;- as.numeric(df$new_elect)

t.test(df$new_elect, df$con_perc, var.equal = F)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  Welch Two Sample t-test
## 
## data:  df$new_elect and df$con_perc
## t = -42.804, df = 857.44, p-value &amp;lt; 2.2e-16
## alternative hypothesis: true difference in means is not equal to 0
## 95 percent confidence interval:
##  -16.62397 -15.16626
## sample estimates:
##  mean of x  mean of y 
##  0.3836257 16.2787368&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Our t-test indicates significant mean differences when MPs were contrasted on being either new/returning.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;This blog provides a quick overview on downloading and handling pre-existent data on UK parliamentary speech, conducting automated content analysis, aggregating data using dplyr and an example of ggplot.&lt;/p&gt;
&lt;p&gt;The preliminary findings here provide some valuable insights which require further analysis. For instance, what other factors effect constituency-focus in Parliamentary contributions. Previous studies have demonstrated that this varies dependent on the marginality of the constituency, gender and by tenure. Another interesting question is whether differences in the transitions of MPs at constituency-level at elections has an effect on future contributions. At a level below newly-elected MPs we have: intra-inter party transitions, and a further level below what led to the transition.&lt;/p&gt;
&lt;p&gt;One finding this study does provide, is that differences in MPs’ constituency-focus are not reducible to differences in personal style. If limitations of suitable data were not an issue the next step would be evaluating whether constituency-references declined for newly elected MPs following their re-election.&lt;/p&gt;
&lt;p&gt;More to follow : )&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
